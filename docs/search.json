[{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gabriel Hoffman. Author, maintainer.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hoffman G (2024). GenomicDataStream: Read genomic data files (VCF, BCF, BGEN, H5AD) R/Rcpp chunks. R package version 0.0.4, https://github.com/GabrielHoffman/GenomicDataStream.","code":"@Manual{,   title = {GenomicDataStream: Read genomic data files (VCF, BCF, BGEN, H5AD) into R/Rcpp in chunks},   author = {Gabriel Hoffman},   year = {2024},   note = {R package version 0.0.4},   url = {https://github.com/GabrielHoffman/GenomicDataStream}, }"},{"path":[]},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/index.html","id":"a-scalable-interface-between-data-and-analysis-underneath-r","dir":"","previous_headings":"GenomicDataStream","what":"A scalable interface between data and analysis underneath R","title":"Read genomic data files (VCF, BCF, BGEN, H5AD) into R/Rcpp in chunks","text":"Reading genomic data files (VCF, BCF, BGEN, H5AD, DelayedArray) R/Rcpp chunks analysis Armadillo / Eigen / Rcpp libraries. Mondern datasets often big fit memory, many analyses operate small chunk features time. Yet practice, many implementations require whole dataset stored memory. Others pair analysis specific data format (.e. regresson analysis paired genotype data VCF) way two components can’t separated use applications. GenomicDataStream C++ interface separates: data source streaming chunks features data matrix downstream analysis","code":""},{"path":[]},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/index.html","id":"example-code-with-c17","dir":"","previous_headings":"GenomicDataStream","what":"Example code with C++17","title":"Read genomic data files (VCF, BCF, BGEN, H5AD) into R/Rcpp in chunks","text":"","code":"#include <RcppArmadillo.h> #include <GenomicDataStream.h>  // use namespace for GenomicDataStream using namespace gds;  // parameters  string file = \"test.vcf.gz\"; string field = \"DS\";    // read dosage field string region = \"\";     // no region filter string samples = \"-\";   // no samples filter int chunkSize = 4;      // each chunk will read 4 variants  // initialize parameters Param param(file, region, samples, chunkSize); param.setField( field );  // Initialise GenomicDataStream to read  // VCF/BCF and BGEN with same interface unique_ptr<GenomicDataStream> gdsStream = createFileView( param );  // declare DataChunk storing an Armadillo matrix for each chunk DataChunk<arma::mat> chunk;  // Store meta-data about each variant VariantInfo *info;  // loop through chunks while( gdsStream->getNextChunk( chunk ) ){      // get data from chunk     // chunk.getData();      // get variant information     info = chunk.getInfo<VariantInfo>();      // Do analysis with variants in this chunk }"},{"path":[]},{"path":[]},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/index.html","id":"single-cell-data","dir":"","previous_headings":"Supported formats","what":"Single cell data","title":"Read genomic data files (VCF, BCF, BGEN, H5AD) into R/Rcpp in chunks","text":"Count matrices single cell data stored H5AD format. format, based HDF5, can store millions cells since designed sparse counts (.e. many entries 0) uses built-compression. H5AD enables file-backed random access analyzing subset data without reading entire file memory.","code":""},{"path":[]},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/index.html","id":"notes","dir":"","previous_headings":"","what":"Notes","title":"Read genomic data files (VCF, BCF, BGEN, H5AD) into R/Rcpp in chunks","text":"GenomicDataStream provide flexability terms data input types matrix libraries. can useful many cases, large number dependencies can require installation additional libraries increase compile times. dependencies can avoided removing support capabilities compiler flags Makevars: -D DISABLE_DELAYED_STREAM            Omit DelayedStream class, remove dependence Rcpp beachmat -D DISABLE_EIGEN            Omit support Eigen matrix library, remove dependence RcppEigen Eigen -D DISABLE_RCPP            Omit support Rcpp matrix library, remove dependence Rcpp GenomicDataStream written core functions C++17 dependence R Rcpp. top , thin wrapper uses Rcpp interface R lower-level library.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/AlleleCodeBuf.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns an empty two-row numeric matrix that ReadAlleles() can load to. — AlleleCodeBuf","title":"Returns an empty two-row numeric matrix that ReadAlleles() can load to. — AlleleCodeBuf","text":"Returns empty two-row numeric matrix ReadAlleles() can load .","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/AlleleCodeBuf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns an empty two-row numeric matrix that ReadAlleles() can load to. — AlleleCodeBuf","text":"","code":"AlleleCodeBuf(pgen)"},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/AlleleCodeBuf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns an empty two-row numeric matrix that ReadAlleles() can load to. — AlleleCodeBuf","text":"pgen Object returned NewPgen().","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/AlleleCodeBuf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns an empty two-row numeric matrix that ReadAlleles() can load to. — AlleleCodeBuf","text":"Numeric matrix two rows, appropriate number columns ReadAlleles().","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/BoolBuf.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a bool buffer that ReadAlleles() can load phasing information to. — BoolBuf","title":"Returns a bool buffer that ReadAlleles() can load phasing information to. — BoolBuf","text":"Returns bool buffer ReadAlleles() can load phasing information .","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/BoolBuf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a bool buffer that ReadAlleles() can load phasing information to. — BoolBuf","text":"","code":"BoolBuf(pgen)"},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/BoolBuf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a bool buffer that ReadAlleles() can load phasing information to. — BoolBuf","text":"pgen Object returned NewPgen().","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/BoolBuf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a bool buffer that ReadAlleles() can load phasing information to. — BoolBuf","text":"Logical vector appropriate length ReadAlleles().","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/Buf.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a numeric buffer that Read() or ReadHardcalls() can load to. — Buf","title":"Returns a numeric buffer that Read() or ReadHardcalls() can load to. — Buf","text":"Returns numeric buffer Read() ReadHardcalls() can load .","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/Buf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a numeric buffer that Read() or ReadHardcalls() can load to. — Buf","text":"","code":"Buf(pgen)"},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/Buf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a numeric buffer that Read() or ReadHardcalls() can load to. — Buf","text":"pgen Object returned NewPgen().","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/Buf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a numeric buffer that Read() or ReadHardcalls() can load to. — Buf","text":"Numeric vector appropriate length Read() ReadHardcalls().","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/ClosePgen.html","id":null,"dir":"Reference","previous_headings":"","what":"Closes a pgen object, releasing resources. — ClosePgen","title":"Closes a pgen object, releasing resources. — ClosePgen","text":"Closes pgen object, releasing resources.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/ClosePgen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Closes a pgen object, releasing resources. — ClosePgen","text":"","code":"ClosePgen(pgen)"},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/ClosePgen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Closes a pgen object, releasing resources. — ClosePgen","text":"pgen Object returned NewPgen().","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/ClosePgen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Closes a pgen object, releasing resources. — ClosePgen","text":"return value, called side-effect.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/ClosePvar.html","id":null,"dir":"Reference","previous_headings":"","what":"Closes a pvar object, releasing memory. — ClosePvar","title":"Closes a pvar object, releasing memory. — ClosePvar","text":"Closes pvar object, releasing memory.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/ClosePvar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Closes a pvar object, releasing memory. — ClosePvar","text":"","code":"ClosePvar(pvar)"},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/ClosePvar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Closes a pvar object, releasing memory. — ClosePvar","text":"pvar Object returned NewPvar().","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/ClosePvar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Closes a pvar object, releasing memory. — ClosePvar","text":"return value, called side-effect.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GenomicDataStream-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Read genomic data files (VCF, BCF, BGEN, h5ad) into R/Rcpp in chunks — GenomicDataStream-package","title":"Read genomic data files (VCF, BCF, BGEN, h5ad) into R/Rcpp in chunks — GenomicDataStream-package","text":"Read genomic data files (VCF, BCF, BGEN, h5ad) R/Rcpp chunks analysis Armadillo Eigen libraries.  BGEN support based rbgen_v1.1.5.","code":""},{"path":[]},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GenomicDataStream-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read genomic data files (VCF, BCF, BGEN, h5ad) into R/Rcpp in chunks — GenomicDataStream-package","text":"Gabriel Hoffman [aut, cre] (<https://orcid.org/0000-0002-0957-0224>) Maintainer: Gabriel Hoffman <gabriel.hoffman@mssm.edu>","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GenomicDataStream.html","id":null,"dir":"Reference","previous_headings":"","what":"GenomicDataStream — GenomicDataStream","title":"GenomicDataStream — GenomicDataStream","text":"Read genomic data files (VCF, BCF, BGEN, h5ad) R/Rcpp chunks analysis Armadillo Eigen libraries","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetAlleleCode.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up an allele code. — GetAlleleCode","title":"Look up an allele code. — GetAlleleCode","text":"Look allele code.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetAlleleCode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up an allele code. — GetAlleleCode","text":"","code":"GetAlleleCode(pvar, variant_num, allele_num)"},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetAlleleCode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up an allele code. — GetAlleleCode","text":"pvar Object returned NewPvar(). variant_num Variant index (1-based). allele_num Allele index (1-based).","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetAlleleCode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up an allele code. — GetAlleleCode","text":"allele_numth allele code variant_numth variant. allele_num=1 corresponds REF allele, allele_num=2 corresponds first ALT allele, allele_num=3 corresponds second ALT allele exists errors otherwise, etc.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetAlleleCt.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the effective number of alleles for a variant. Note that if no pvar was provided to the NewPgen() call, this function may return 2 even at multiallelic variants, since the .pgen may not store allele-count information. — GetAlleleCt","title":"Returns the effective number of alleles for a variant. Note that if no pvar was provided to the NewPgen() call, this function may return 2 even at multiallelic variants, since the .pgen may not store allele-count information. — GetAlleleCt","text":"Returns effective number alleles variant.  Note pvar provided NewPgen() call, function may return 2 even multiallelic variants, since .pgen may store allele-count information.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetAlleleCt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the effective number of alleles for a variant. Note that if no pvar was provided to the NewPgen() call, this function may return 2 even at multiallelic variants, since the .pgen may not store allele-count information. — GetAlleleCt","text":"","code":"GetAlleleCt(pvar_or_pgen, variant_num)"},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetAlleleCt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the effective number of alleles for a variant. Note that if no pvar was provided to the NewPgen() call, this function may return 2 even at multiallelic variants, since the .pgen may not store allele-count information. — GetAlleleCt","text":"pvar_or_pgen Object returned NewPvar() NewPgen(). variant_num Variant index (1-based).","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetAlleleCt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the effective number of alleles for a variant. Note that if no pvar was provided to the NewPgen() call, this function may return 2 even at multiallelic variants, since the .pgen may not store allele-count information. — GetAlleleCt","text":"max(2, <number alleles variant_numth variant known >).  Note ","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetMaxAlleleCt.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the maximum GetAlleleCt() value across all variants in the file. — GetMaxAlleleCt","title":"Returns the maximum GetAlleleCt() value across all variants in the file. — GetMaxAlleleCt","text":"Returns maximum GetAlleleCt() value across variants file.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetMaxAlleleCt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the maximum GetAlleleCt() value across all variants in the file. — GetMaxAlleleCt","text":"","code":"GetMaxAlleleCt(pvar_or_pgen)"},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetMaxAlleleCt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the maximum GetAlleleCt() value across all variants in the file. — GetMaxAlleleCt","text":"pvar_or_pgen Object returned NewPvar() NewPgen().","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetMaxAlleleCt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the maximum GetAlleleCt() value across all variants in the file. — GetMaxAlleleCt","text":"Maximum GetAlleleCt() value across variants.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetRawSampleCt.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the number of samples in the file. — GetRawSampleCt","title":"Returns the number of samples in the file. — GetRawSampleCt","text":"Returns number samples file.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetRawSampleCt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the number of samples in the file. — GetRawSampleCt","text":"","code":"GetRawSampleCt(pgen)"},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetRawSampleCt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the number of samples in the file. — GetRawSampleCt","text":"pgen Object returned NewPgen().","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetRawSampleCt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the number of samples in the file. — GetRawSampleCt","text":"Number samples.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetVariantCt.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the number of variants in the file. — GetVariantCt","title":"Returns the number of variants in the file. — GetVariantCt","text":"Returns number variants file.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetVariantCt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the number of variants in the file. — GetVariantCt","text":"","code":"GetVariantCt(pvar_or_pgen)"},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetVariantCt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the number of variants in the file. — GetVariantCt","text":"pvar_or_pgen Object returned NewPvar() NewPgen().","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetVariantCt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the number of variants in the file. — GetVariantCt","text":"Number variants.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetVariantId.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert variant index to variant ID string. — GetVariantId","title":"Convert variant index to variant ID string. — GetVariantId","text":"Convert variant index variant ID string.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetVariantId.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert variant index to variant ID string. — GetVariantId","text":"","code":"GetVariantId(pvar, variant_num)"},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetVariantId.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert variant index to variant ID string. — GetVariantId","text":"pvar Object returned NewPvar(). variant_num Variant index (1-based).","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetVariantId.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert variant index to variant ID string. — GetVariantId","text":"variant_numth variant ID string.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetVariantsById.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert variant ID string to variant index(es). — GetVariantsById","title":"Convert variant ID string to variant index(es). — GetVariantsById","text":"Convert variant ID string variant index(es).","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetVariantsById.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert variant ID string to variant index(es). — GetVariantsById","text":"","code":"GetVariantsById(pvar, id)"},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetVariantsById.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert variant ID string to variant index(es). — GetVariantsById","text":"pvar Object returned NewPvar(). id Variant ID look .","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/GetVariantsById.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert variant ID string to variant index(es). — GetVariantsById","text":"list (1-based) variant indices given variant ID.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/HardcallPhasePresent.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns whether explicitly phased hardcalls are present. — HardcallPhasePresent","title":"Returns whether explicitly phased hardcalls are present. — HardcallPhasePresent","text":"Returns whether explicitly phased hardcalls present.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/HardcallPhasePresent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns whether explicitly phased hardcalls are present. — HardcallPhasePresent","text":"","code":"HardcallPhasePresent(pgen)"},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/HardcallPhasePresent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns whether explicitly phased hardcalls are present. — HardcallPhasePresent","text":"pgen Object returned NewPgen().","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/HardcallPhasePresent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns whether explicitly phased hardcalls are present. — HardcallPhasePresent","text":"TRUE file contains least one phased heterozygous hardcall, FALSE otherwise.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/IntAlleleCodeBuf.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns an empty two-row integer matrix that ReadAlleles() can load to. — IntAlleleCodeBuf","title":"Returns an empty two-row integer matrix that ReadAlleles() can load to. — IntAlleleCodeBuf","text":"Returns empty two-row integer matrix ReadAlleles() can load .","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/IntAlleleCodeBuf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns an empty two-row integer matrix that ReadAlleles() can load to. — IntAlleleCodeBuf","text":"","code":"IntAlleleCodeBuf(pgen)"},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/IntAlleleCodeBuf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns an empty two-row integer matrix that ReadAlleles() can load to. — IntAlleleCodeBuf","text":"pgen Object returned NewPgen().","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/IntAlleleCodeBuf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns an empty two-row integer matrix that ReadAlleles() can load to. — IntAlleleCodeBuf","text":"Integer matrix two rows, appropriate number columns ReadAlleles().","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/IntBuf.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns an integer buffer that ReadHardcalls() can load to. — IntBuf","title":"Returns an integer buffer that ReadHardcalls() can load to. — IntBuf","text":"Returns integer buffer ReadHardcalls() can load .","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/IntBuf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns an integer buffer that ReadHardcalls() can load to. — IntBuf","text":"","code":"IntBuf(pgen)"},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/IntBuf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns an integer buffer that ReadHardcalls() can load to. — IntBuf","text":"pgen Object returned NewPgen().","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/IntBuf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns an integer buffer that ReadHardcalls() can load to. — IntBuf","text":"Integer vector appropriate length ReadHardcalls().","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/NewPgen.html","id":null,"dir":"Reference","previous_headings":"","what":"Opens a .pgen or PLINK 1 .bed file. — NewPgen","title":"Opens a .pgen or PLINK 1 .bed file. — NewPgen","text":"Opens .pgen PLINK 1 .bed file.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/NewPgen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Opens a .pgen or PLINK 1 .bed file. — NewPgen","text":"","code":"NewPgen(filename, pvar = NULL, raw_sample_ct = NULL, sample_subset = NULL)"},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/NewPgen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Opens a .pgen or PLINK 1 .bed file. — NewPgen","text":"filename .pgen/.bed file path. pvar Object (see NewPvar()) corresponding .pgen's companion .pvar; technically optional, necessary functionality.  particular, multiallelic variants, ALT alleles may collapsed together .pvar information available. raw_sample_ct Number samples file; required PLINK 1 .bed file, otherwise optional. sample_subset List 1-based positions samples load; optional, samples loaded specified.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/NewPgen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Opens a .pgen or PLINK 1 .bed file. — NewPgen","text":"pgen object, can queried genotype/dosage data.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/NewPvar.html","id":null,"dir":"Reference","previous_headings":"","what":"Loads variant IDs and allele codes from a .pvar or .bim file (which can be compressed with gzip or Zstd). — NewPvar","title":"Loads variant IDs and allele codes from a .pvar or .bim file (which can be compressed with gzip or Zstd). — NewPvar","text":"Loads variant IDs allele codes .pvar .bim file (can compressed gzip Zstd).","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/NewPvar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loads variant IDs and allele codes from a .pvar or .bim file (which can be compressed with gzip or Zstd). — NewPvar","text":"","code":"NewPvar(filename)"},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/NewPvar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loads variant IDs and allele codes from a .pvar or .bim file (which can be compressed with gzip or Zstd). — NewPvar","text":"filename .pvar/.bim file path.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/NewPvar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loads variant IDs and allele codes from a .pvar or .bim file (which can be compressed with gzip or Zstd). — NewPvar","text":"pvar object, can queried variant IDs allele codes.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/Read.html","id":null,"dir":"Reference","previous_headings":"","what":"Loads the variant_numth variant, and then fills buf with numeric dosages in [0, 2] indicating the dosages of the first ALT (or user-specified) allele for each sample, with missing values represented by NA. — Read","title":"Loads the variant_numth variant, and then fills buf with numeric dosages in [0, 2] indicating the dosages of the first ALT (or user-specified) allele for each sample, with missing values represented by NA. — Read","text":"function treats data diploid; divide 2 obtain haploid dosages.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/Read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loads the variant_numth variant, and then fills buf with numeric dosages in [0, 2] indicating the dosages of the first ALT (or user-specified) allele for each sample, with missing values represented by NA. — Read","text":"","code":"Read(pgen, buf, variant_num, allele_num = 2L)"},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/Read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loads the variant_numth variant, and then fills buf with numeric dosages in [0, 2] indicating the dosages of the first ALT (or user-specified) allele for each sample, with missing values represented by NA. — Read","text":"pgen Object returned NewPgen(). buf Buffer returned Buf(). variant_num Variant index (1-based). allele_num Allele index; 1 corresponds REF, 2 first ALT allele, 3 second ALT allele exists, etc.  Optional, defaults 2.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/Read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loads the variant_numth variant, and then fills buf with numeric dosages in [0, 2] indicating the dosages of the first ALT (or user-specified) allele for each sample, with missing values represented by NA. — Read","text":"return value, called buf-filling side-effect.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/ReadAlleles.html","id":null,"dir":"Reference","previous_headings":"","what":"Loads the variant_numth variant, and then fills acbuf with integer allele codes, where each column of the buffer corresponds to a sample. An allele code of 0 corresponds to the REF allele, 1 to the first ALT, 2 to the second ALT, etc. Missing hardcalls are represented by a pair of NA codes. — ReadAlleles","title":"Loads the variant_numth variant, and then fills acbuf with integer allele codes, where each column of the buffer corresponds to a sample. An allele code of 0 corresponds to the REF allele, 1 to the first ALT, 2 to the second ALT, etc. Missing hardcalls are represented by a pair of NA codes. — ReadAlleles","text":"function treats data diploid.  really haploid, may want compare two rows, treat samples allele codes differ missing values.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/ReadAlleles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loads the variant_numth variant, and then fills acbuf with integer allele codes, where each column of the buffer corresponds to a sample. An allele code of 0 corresponds to the REF allele, 1 to the first ALT, 2 to the second ALT, etc. Missing hardcalls are represented by a pair of NA codes. — ReadAlleles","text":"","code":"ReadAlleles(pgen, acbuf, variant_num, phasepresent_buf = NULL)"},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/ReadAlleles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loads the variant_numth variant, and then fills acbuf with integer allele codes, where each column of the buffer corresponds to a sample. An allele code of 0 corresponds to the REF allele, 1 to the first ALT, 2 to the second ALT, etc. Missing hardcalls are represented by a pair of NA codes. — ReadAlleles","text":"pgen Object returned NewPgen(). acbuf Buffer returned AlleleCodeBuf() IntAlleleCodeBuf(). variant_num Variant index (1-based). phasepresent_buf Buffer returned BoolBuf().  Optional; provided, elements set true sample known phase.  values TRUE even raw data unphased, homozygous genotypes always known phase.  (Missing genotypes considered unknown phase.)","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/ReadAlleles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loads the variant_numth variant, and then fills acbuf with integer allele codes, where each column of the buffer corresponds to a sample. An allele code of 0 corresponds to the REF allele, 1 to the first ALT, 2 to the second ALT, etc. Missing hardcalls are represented by a pair of NA codes. — ReadAlleles","text":"return value, called acbuf-filling side-effect.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/ReadHardcalls.html","id":null,"dir":"Reference","previous_headings":"","what":"Loads the variant_numth variant, and then fills buf with {0, 1, 2, NA} values indicating the number of copies of the first ALT (or user-specified) allele each sample has. — ReadHardcalls","title":"Loads the variant_numth variant, and then fills buf with {0, 1, 2, NA} values indicating the number of copies of the first ALT (or user-specified) allele each sample has. — ReadHardcalls","text":"function treats data diploid; can divide 2, treat 0.5 NA, actually haploid.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/ReadHardcalls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loads the variant_numth variant, and then fills buf with {0, 1, 2, NA} values indicating the number of copies of the first ALT (or user-specified) allele each sample has. — ReadHardcalls","text":"","code":"ReadHardcalls(pgen, buf, variant_num, allele_num = 2L)"},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/ReadHardcalls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loads the variant_numth variant, and then fills buf with {0, 1, 2, NA} values indicating the number of copies of the first ALT (or user-specified) allele each sample has. — ReadHardcalls","text":"pgen Object returned NewPgen(). buf Buffer returned Buf() IntBuf(). variant_num Variant index (1-based). allele_num Allele index; 1 corresponds REF, 2 first ALT allele, 3 second ALT allele exists, etc.  Optional, defaults 2.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/ReadHardcalls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loads the variant_numth variant, and then fills buf with {0, 1, 2, NA} values indicating the number of copies of the first ALT (or user-specified) allele each sample has. — ReadHardcalls","text":"return value, called buf-filling side-effect.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/ReadIntList.html","id":null,"dir":"Reference","previous_headings":"","what":"Load hardcalls for multiple variants as an integer matrix. — ReadIntList","title":"Load hardcalls for multiple variants as an integer matrix. — ReadIntList","text":"function treats data diploid; can divide 2, treat 0.5 NA, actually haploid.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/ReadIntList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load hardcalls for multiple variants as an integer matrix. — ReadIntList","text":"","code":"ReadIntList(pgen, variant_subset)"},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/ReadIntList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load hardcalls for multiple variants as an integer matrix. — ReadIntList","text":"pgen Object returned NewPgen(). variant_subset Integer vector containing 1-based indexes variants load.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/ReadIntList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load hardcalls for multiple variants as an integer matrix. — ReadIntList","text":"Integer matrix, rows correspond samples, columns correspond variant_subset, values {0, 1, 2, NA} indicating number hardcall ALT allele copies.  multiallelic variants, ALT alleles combined.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/ReadList.html","id":null,"dir":"Reference","previous_headings":"","what":"Load dosages for multiple variants as a numeric matrix. — ReadList","title":"Load dosages for multiple variants as a numeric matrix. — ReadList","text":"function treats data diploid; divide 2 obtain haploid dosages.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/ReadList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load dosages for multiple variants as a numeric matrix. — ReadList","text":"","code":"ReadList(pgen, variant_subset, meanimpute = FALSE)"},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/ReadList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load dosages for multiple variants as a numeric matrix. — ReadList","text":"pgen Object returned NewPgen(). variant_subset Integer vector containing 1-based indexes variants load. meanimpute Optional; true, missing values mean-imputed instead represented NA.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/ReadList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load dosages for multiple variants as a numeric matrix. — ReadList","text":"Numeric matrix, rows correspond samples, columns correspond variant_subset.  Values [0, 2] indicating ALT allele dosages, NA missing dosages.  multiallelic variants, ALT alelles combined.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/VariantScores.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute variant scores. — VariantScores","title":"Compute variant scores. — VariantScores","text":"function treats data diploid; divide 2 obtain scores based haploid dosage matrix.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/VariantScores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute variant scores. — VariantScores","text":"","code":"VariantScores(pgen, weights, variant_subset = NULL)"},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/VariantScores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute variant scores. — VariantScores","text":"pgen Object returned NewPgen(). weights Sample weights. variant_subset Integer vector containing 1-based indexes variants include dosage matrix.  Optional; default, variants included.","code":""},{"path":"http://DiseaseNeurogenomics.github.io/GenomicDataStream/reference/VariantScores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute variant scores. — VariantScores","text":"Numeric vector, containing product sample-weight vector specified subset dosage matrix.","code":""}]
