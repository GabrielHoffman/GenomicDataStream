
RHTSLIB_LIBS=$(shell "${R_HOME}/bin${R_ARCH_BIN}/Rscript" -e \
	'Rhtslib::pkgconfig("PKG_LIBS")') 
RHTSLIB_CPPFLAGS=$(shell "${R_HOME}/bin${R_ARCH_BIN}/Rscript" -e \
	'Rhtslib::pkgconfig("PKG_CPPFLAGS")')


# PLINK2_LIBS=$(shell "${R_HOME}/bin${R_ARCH_BIN}/Rscript" -e \
# 	 'pth = system.file("libs", package = "pgenlibr", mustWork = TRUE); \
# 	 libs = dir(system.file("libs", package = "pgenlibr", mustWork = TRUE), pattern=".a$"); \
# 	libs = gsub("^lib(.*).a", "-l\\1", libs); \
# 	if( length(libs) > 0){ cat("-L", pth, " ", paste(libs, collapse=" "), sep="")}')


# PLINK2_LIBS=-L/hpc/users/hoffmg01/.Rlib/R_441_bioc320/pgenlibr/libs -lPGDEFLATE -lPLINK2

# PLINK2_LIBS=$(shell "${R_HOME}/bin${R_ARCH_BIN}/Rscript" -e \
#  	 'cat(dir(system.file("libs", package = "pgenlibr", mustWork = TRUE), pattern="libPLINK2|libPGDEFLATE|libPGZSTD", full.names=TRUE))')


# /Users/gabrielhoffman/prog/R-4.4.1/library/pgenlibr/libs/pgenlibr.so
# Full path here works on minerva, not OSX




PKG_CPPFLAGS = -D DISABLE_PLINK $(SHLIB_OPENMP_CXXFLAGS) -I. -I${HTSLIB_DIR} $(RHTSLIB_CPPFLAGS) \
-D NDEBUG  \
-D SQLITE_ENABLE_COLUMN_METADATA \
-D SQLITE_ENABLE_STAT4 \
-D SQLITE_MAX_EXPR_DEPTH=10000 \
-D SQLITE_USE_URI=1 \
-I ../inst/include/ \
-I ../inst/include/zstd-1.1.0/lib  \
-I ../inst/include/zstd-1.1.0/lib/common  \
-I ../inst/include/zstd-1.1.0/lib/compress  \
-I ../inst/include/zstd-1.1.0/lib/decompress  

PKG_LIBS = $(SHLIB_OPENMP_CXXFLAGS) $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS)  $(RHTSLIB_LIBS) $(PLINK2_LIBS) 

# From pgenlibr
# PKG_CPPFLAGS += -DNO_UNALIGNED -DPGENLIB_NOPRINT @ZSTD_COMPILE_FLAG@ @LIBDEFLATE_COMPILE_FLAG@ @SIMDE_COMPILE_FLAG@ @ZSTD_INCLUDE_PATH@ @LIBDEFLATE_INCLUDE_PATH@ @SIMDE_INCLUDE_PATH@ 
# PKG_LIBS += -L. @ZSTD_LIBS@ @LIBDEFLATE_LIBS@ -lpthread

CXX_STD=CXX17

PKG_CFLAGS=-DSQLITE_WITHOUT_ZONEMALLOC -D NDEBUG

C_SOURCES = $(wildcard sqlite3/*.c) $(wildcard zstd-1.1.0/*.c)
C_OBJECTS = $(patsubst %.c,%.o,$(C_SOURCES)) 
CXX_SOURCES = $(wildcard bgen/*.cpp) $(wildcard boost/*.cpp) $(wildcard db/*.cpp) #$(wildcard pgen/*.cpp) 
CXX_OBJECTS = $(patsubst %.cpp,%.o,$(CXX_SOURCES))
OBJECTS = RcppExports.o export.o $(CXX_OBJECTS) $(C_OBJECTS) #regression.o

.PHONY: all 
all: $(SHLIB)
$(SHLIB): ${OBJECTS} Makevars #libBGEN.a

libBGEN.a: $(CXX_OBJECTS) $(C_OBJECTS)
	$(AR) rcs libBGEN.a $(CXX_OBJECTS) $(C_OBJECTS)
