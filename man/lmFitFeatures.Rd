% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/linearRegression.R
\name{lmFitFeatures,ANY,ANY,GenomicDataStream-method}
\alias{lmFitFeatures,ANY,ANY,GenomicDataStream-method}
\alias{lmFitFeatures,}
\alias{GenomicDataStream-method}
\title{Fit series of linear regression models}
\usage{
\S4method{lmFitFeatures}{ANY,ANY,GenomicDataStream}(
  y,
  design,
  data,
  weights,
  detail = 0,
  preprojection = TRUE,
  nthreads = 1,
  ...
)
}
\arguments{
\item{y}{response vector}

\item{design}{design matrix, mat or sp_mat}

\item{data}{\code{matrix} or \code{GenomicDataStream} with additional features to be fit one at a time}

\item{weights}{sample-level weights}

\item{detail}{return model with specified level of detail. LOW (beta, se, sigSq, rdf), MEDIUM (vcov), HIGH (residuals), MOST (hatvalues)}

\item{preprojection}{default true. Use preproject of design matrix to accelerate calculations}

\item{nthreads}{number of threads.  Each model is fit in serial, analysis is parallelized across features}

\item{...}{other args}
}
\description{
Fit series of linear regression models
}
\examples{
# create response, design and weights 
y = seq(60)
X_design = matrix(1, 60,1)
w = rep(1,60)

# VCF file
file <- system.file("extdata", "test.vcf.gz", package = "GenomicDataStream")

# Read data into R
# then run lmFitFeatures()
gds = GenomicDataStream(file, "DS", initialize=TRUE)
dat = getNextChunk(gds)
X_features = dat$X

res1 = lmFitFeatures(y, X_design, X_features, w)

# Data stays at C++ level
# then run lmFitFeatures()
gds = GenomicDataStream(file, "DS")

res2 = lmFitFeatures(y, X_design, gds, w)
}
